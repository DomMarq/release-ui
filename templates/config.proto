syntax = "proto3";

package release;

service Release {
    // Get information about a release from its id
    rpc GetRelease(GetReleaseRequest) returns (SingleRelease) {};
    // List all releases matching the request
    rpc ListReleases (ListReleasesRequest) returns (ListReleasesReponse) {};
}

message GetReleaseRequest {
    // Release id
    ReleaseIdentifier release_id = 1;
}


message ListReleasesRequest {
    // URL of the repo
    string repo_url = 1;
    // State of the release
    Status state = 2;
    // Release labels
    repeated string labels = 3;
    // Look for releases created after:
    int64 from_timestamp = 4;
    // Look for releases modified before:
    int64 to_timestamp = 5;
    // List only a number of releases, list all otherwise
    uint32 max_count = 6;
}

message ReleaseIdentifier {
    // URL of the repo
    string repo_url = 1;
    // Unique identifier for the release
    string id = 2;
}


enum Status {
    // Default.
    UNUSED_STATUS = 0;
    // The Release is in progress.
    PENDING = 1;
    // The Release is succesfull.
    COMPLETE = 2;
    // The Release could not complete and needs manual intervention.
    SUSPENDED = 3;
    // The Release has been abandoned.
    ABANDONED = 4;
}

enum Stage {
    // Default.
    DEFAULT_STATUS = 0;
    // The Release is starting up.
    INITIALIZING = 1;
    // The Release is building.
    BUILDING = 2;
    // The Release is qualifying.
    QUALIFYING = 3;
    // Publishing artifacts.
    PUBLISHING = 4;
    // Release is being tagged
    TAGGING = 5;
    // Release is being marked as complete
    FINALIZING = 6;
    // Release is done
    DONE = 7;
}

message SingleRelease {
    // Release Id
    ReleaseIdentifier id = 1;
    // For base branch, use "base: master", for tag use "tag: 0.3.2"
    repeated string labels = 2;
    // Reference used to create this release
    string ref = 3;
    // State of the release
    Status state = 4;
    // Last stage of the release in progress
    Stage stage = 5;
    // Time this release was created
    int64 started = 6;
    // Last time this release was modified
    int64 last_modified = 7;
    // When release is complete, a link to artifacts.
    string artifacts_link = 8;
    // When release is complete, a link to the release page
    string release_url = 9;
    // Adding all of the release tasks to the release
    message ReleaseTask {
        string task_name = 1;
        int64 start_time = 2;
        int64 end_time = 3;
        Status status = 4;
        string error_message = 5;
        string log_link = 6;
    }
}

message ListReleasesReponse {
    // Release identifiers
    repeated ReleaseIdentifier id = 1;
}
