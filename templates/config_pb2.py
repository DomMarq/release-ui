# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: config.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='config.proto',
  package='release',
  syntax='proto3',
  serialized_pb=_b('\n\x0c\x63onfig.proto\x12\x07release\"C\n\x11GetReleaseRequest\x12.\n\nrelease_id\x18\x01 \x01(\x0b\x32\x1a.release.ReleaseIdentifier\"\x98\x01\n\x13ListReleasesRequest\x12\x10\n\x08repo_url\x18\x01 \x01(\t\x12\x1e\n\x05state\x18\x02 \x01(\x0e\x32\x0f.release.Status\x12\x0e\n\x06labels\x18\x03 \x03(\t\x12\x16\n\x0e\x66rom_timestamp\x18\x04 \x01(\x03\x12\x14\n\x0cto_timestamp\x18\x05 \x01(\x03\x12\x11\n\tmax_count\x18\x06 \x01(\r\"1\n\x11ReleaseIdentifier\x12\x10\n\x08repo_url\x18\x01 \x01(\t\x12\n\n\x02id\x18\x02 \x01(\t\"\xe9\x02\n\rSingleRelease\x12&\n\x02id\x18\x01 \x01(\x0b\x32\x1a.release.ReleaseIdentifier\x12\x0e\n\x06labels\x18\x02 \x03(\t\x12\x0b\n\x03ref\x18\x03 \x01(\t\x12\x1e\n\x05state\x18\x04 \x01(\x0e\x32\x0f.release.Status\x12\x1d\n\x05stage\x18\x05 \x01(\x0e\x32\x0e.release.Stage\x12\x0f\n\x07started\x18\x06 \x01(\x03\x12\x15\n\rlast_modified\x18\x07 \x01(\x03\x12\x16\n\x0e\x61rtifacts_link\x18\x08 \x01(\t\x12\x13\n\x0brelease_url\x18\t \x01(\t\x1a\x7f\n\x0bReleaseTask\x12\x11\n\ttask_name\x18\x01 \x01(\t\x12\x12\n\nstart_time\x18\x02 \x01(\x03\x12\x10\n\x08\x65nd_time\x18\x03 \x01(\x03\x12\x0e\n\x06status\x18\x04 \x01(\x08\x12\x15\n\rerror_message\x18\x05 \x01(\t\x12\x10\n\x08log_link\x18\x06 \x01(\t\"=\n\x13ListReleasesReponse\x12&\n\x02id\x18\x01 \x03(\x0b\x32\x1a.release.ReleaseIdentifier*T\n\x06Status\x12\x11\n\rUNUSED_STATUS\x10\x00\x12\x0b\n\x07PENDING\x10\x01\x12\x0c\n\x08\x43OMPLETE\x10\x02\x12\r\n\tSUSPENDED\x10\x03\x12\r\n\tABANDONED\x10\x04*\x82\x01\n\x05Stage\x12\x12\n\x0e\x44\x45\x46\x41ULT_STATUS\x10\x00\x12\x10\n\x0cINITIALIZING\x10\x01\x12\x0c\n\x08\x42UILDING\x10\x02\x12\x0e\n\nQUALIFYING\x10\x03\x12\x0e\n\nPUBLISHING\x10\x04\x12\x0b\n\x07TAGGING\x10\x05\x12\x0e\n\nFINALIZING\x10\x06\x12\x08\n\x04\x44ONE\x10\x07\x32\x9b\x01\n\x07Release\x12\x42\n\nGetRelease\x12\x1a.release.GetReleaseRequest\x1a\x16.release.SingleRelease\"\x00\x12L\n\x0cListReleases\x12\x1c.release.ListReleasesRequest\x1a\x1c.release.ListReleasesReponse\"\x00\x62\x06proto3')
)

_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='release.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNUSED_STATUS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PENDING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMPLETE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUSPENDED', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ABANDONED', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=727,
  serialized_end=811,
)
_sym_db.RegisterEnumDescriptor(_STATUS)

Status = enum_type_wrapper.EnumTypeWrapper(_STATUS)
_STAGE = _descriptor.EnumDescriptor(
  name='Stage',
  full_name='release.Stage',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DEFAULT_STATUS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INITIALIZING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BUILDING', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='QUALIFYING', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PUBLISHING', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TAGGING', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FINALIZING', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DONE', index=7, number=7,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=814,
  serialized_end=944,
)
_sym_db.RegisterEnumDescriptor(_STAGE)

Stage = enum_type_wrapper.EnumTypeWrapper(_STAGE)
UNUSED_STATUS = 0
PENDING = 1
COMPLETE = 2
SUSPENDED = 3
ABANDONED = 4
DEFAULT_STATUS = 0
INITIALIZING = 1
BUILDING = 2
QUALIFYING = 3
PUBLISHING = 4
TAGGING = 5
FINALIZING = 6
DONE = 7



_GETRELEASEREQUEST = _descriptor.Descriptor(
  name='GetReleaseRequest',
  full_name='release.GetReleaseRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='release_id', full_name='release.GetReleaseRequest.release_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25,
  serialized_end=92,
)


_LISTRELEASESREQUEST = _descriptor.Descriptor(
  name='ListReleasesRequest',
  full_name='release.ListReleasesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repo_url', full_name='release.ListReleasesRequest.repo_url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='state', full_name='release.ListReleasesRequest.state', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='labels', full_name='release.ListReleasesRequest.labels', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='from_timestamp', full_name='release.ListReleasesRequest.from_timestamp', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='to_timestamp', full_name='release.ListReleasesRequest.to_timestamp', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='max_count', full_name='release.ListReleasesRequest.max_count', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=95,
  serialized_end=247,
)


_RELEASEIDENTIFIER = _descriptor.Descriptor(
  name='ReleaseIdentifier',
  full_name='release.ReleaseIdentifier',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repo_url', full_name='release.ReleaseIdentifier.repo_url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='id', full_name='release.ReleaseIdentifier.id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=249,
  serialized_end=298,
)


_SINGLERELEASE_RELEASETASK = _descriptor.Descriptor(
  name='ReleaseTask',
  full_name='release.SingleRelease.ReleaseTask',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_name', full_name='release.SingleRelease.ReleaseTask.task_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_time', full_name='release.SingleRelease.ReleaseTask.start_time', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='release.SingleRelease.ReleaseTask.end_time', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='status', full_name='release.SingleRelease.ReleaseTask.status', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error_message', full_name='release.SingleRelease.ReleaseTask.error_message', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='log_link', full_name='release.SingleRelease.ReleaseTask.log_link', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=535,
  serialized_end=662,
)

_SINGLERELEASE = _descriptor.Descriptor(
  name='SingleRelease',
  full_name='release.SingleRelease',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='release.SingleRelease.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='labels', full_name='release.SingleRelease.labels', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ref', full_name='release.SingleRelease.ref', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='state', full_name='release.SingleRelease.state', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stage', full_name='release.SingleRelease.stage', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='started', full_name='release.SingleRelease.started', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='last_modified', full_name='release.SingleRelease.last_modified', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='artifacts_link', full_name='release.SingleRelease.artifacts_link', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='release_url', full_name='release.SingleRelease.release_url', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_SINGLERELEASE_RELEASETASK, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=301,
  serialized_end=662,
)


_LISTRELEASESREPONSE = _descriptor.Descriptor(
  name='ListReleasesReponse',
  full_name='release.ListReleasesReponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='release.ListReleasesReponse.id', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=664,
  serialized_end=725,
)

_GETRELEASEREQUEST.fields_by_name['release_id'].message_type = _RELEASEIDENTIFIER
_LISTRELEASESREQUEST.fields_by_name['state'].enum_type = _STATUS
_SINGLERELEASE_RELEASETASK.containing_type = _SINGLERELEASE
_SINGLERELEASE.fields_by_name['id'].message_type = _RELEASEIDENTIFIER
_SINGLERELEASE.fields_by_name['state'].enum_type = _STATUS
_SINGLERELEASE.fields_by_name['stage'].enum_type = _STAGE
_LISTRELEASESREPONSE.fields_by_name['id'].message_type = _RELEASEIDENTIFIER
DESCRIPTOR.message_types_by_name['GetReleaseRequest'] = _GETRELEASEREQUEST
DESCRIPTOR.message_types_by_name['ListReleasesRequest'] = _LISTRELEASESREQUEST
DESCRIPTOR.message_types_by_name['ReleaseIdentifier'] = _RELEASEIDENTIFIER
DESCRIPTOR.message_types_by_name['SingleRelease'] = _SINGLERELEASE
DESCRIPTOR.message_types_by_name['ListReleasesReponse'] = _LISTRELEASESREPONSE
DESCRIPTOR.enum_types_by_name['Status'] = _STATUS
DESCRIPTOR.enum_types_by_name['Stage'] = _STAGE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

GetReleaseRequest = _reflection.GeneratedProtocolMessageType('GetReleaseRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETRELEASEREQUEST,
  __module__ = 'config_pb2'
  # @@protoc_insertion_point(class_scope:release.GetReleaseRequest)
  ))
_sym_db.RegisterMessage(GetReleaseRequest)

ListReleasesRequest = _reflection.GeneratedProtocolMessageType('ListReleasesRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTRELEASESREQUEST,
  __module__ = 'config_pb2'
  # @@protoc_insertion_point(class_scope:release.ListReleasesRequest)
  ))
_sym_db.RegisterMessage(ListReleasesRequest)

ReleaseIdentifier = _reflection.GeneratedProtocolMessageType('ReleaseIdentifier', (_message.Message,), dict(
  DESCRIPTOR = _RELEASEIDENTIFIER,
  __module__ = 'config_pb2'
  # @@protoc_insertion_point(class_scope:release.ReleaseIdentifier)
  ))
_sym_db.RegisterMessage(ReleaseIdentifier)

SingleRelease = _reflection.GeneratedProtocolMessageType('SingleRelease', (_message.Message,), dict(

  ReleaseTask = _reflection.GeneratedProtocolMessageType('ReleaseTask', (_message.Message,), dict(
    DESCRIPTOR = _SINGLERELEASE_RELEASETASK,
    __module__ = 'config_pb2'
    # @@protoc_insertion_point(class_scope:release.SingleRelease.ReleaseTask)
    ))
  ,
  DESCRIPTOR = _SINGLERELEASE,
  __module__ = 'config_pb2'
  # @@protoc_insertion_point(class_scope:release.SingleRelease)
  ))
_sym_db.RegisterMessage(SingleRelease)
_sym_db.RegisterMessage(SingleRelease.ReleaseTask)

ListReleasesReponse = _reflection.GeneratedProtocolMessageType('ListReleasesReponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTRELEASESREPONSE,
  __module__ = 'config_pb2'
  # @@protoc_insertion_point(class_scope:release.ListReleasesReponse)
  ))
_sym_db.RegisterMessage(ListReleasesReponse)



_RELEASE = _descriptor.ServiceDescriptor(
  name='Release',
  full_name='release.Release',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=947,
  serialized_end=1102,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetRelease',
    full_name='release.Release.GetRelease',
    index=0,
    containing_service=None,
    input_type=_GETRELEASEREQUEST,
    output_type=_SINGLERELEASE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ListReleases',
    full_name='release.Release.ListReleases',
    index=1,
    containing_service=None,
    input_type=_LISTRELEASESREQUEST,
    output_type=_LISTRELEASESREPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_RELEASE)

DESCRIPTOR.services_by_name['Release'] = _RELEASE

# @@protoc_insertion_point(module_scope)
